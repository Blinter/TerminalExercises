Terminal Exercises

Part I
1. make a directory called first
	mkdir first;

2. change directory to the first folder
	cd first;

3. create a file called person.txt
	touch person.txt;

4. change the name of person.txt to another.txt
	mv person.txt another.txt;

5. make a copy of the another.txt file and call it copy.txt
	cp another.txt copy.txt;

6. remove the copy.txt file
	rm copy.txt;

7. make a copy of the first folder and call it second
	cd ..;
	cp -Rf first second;

8. delete the second folder
	rm -Rf second;

Part II
1. What does the man command do? Type in man rm. How do you scroll and get out?
	man rm;

	Movement: <n> can be input into the window before the key is pressed for finer control. 
	(To get to this window press h or H from the manual page, this is a summary of less commands)
	1. e or (CTRL + E) or j or (CTRL + N) or CR (Carriage Return or Enter) <n> 
		to advance forward one or <n> lines.
	2. y or (CTRL + Y) or k or (CTRL + K) or (CTRL + P) <n> 
		to advance backward one or <n> lines.
	3. f or (CTRL + F) or (CTRL + V) or (SPACE) <n> 
		to advance forward one window or <n> lines.
	4. b or (CTRL + B) or (ESC + v) <n> 
		to advance backward one window or <n> lines.
	5. z <n> 
		to move forward one window or <n> lines.
	6. w <n> 
		to move backward one window or <n> lines.
	7. ESC + SPACE
		to move forward one window but don't stop at the End of File.
	8. d or CTRL + D <n> 
		to move forward one half-window or <n> lines.
	9. u or CTRL + U <n> 
		to move backward one half-window or <n> lines.
	10. ESC + ) or Right Arrow <n> 
		to scroll horizonally to the right one position or <n> positions.
	11. ESC + ( or Left Arrow <n> 
		to scroll horizontally to the left one position or <n> positions.
	12. ESC-} or CTRL + Right Arrow
		Right to last column displayed.
	13. ESC-{ or CTRL + Left Arrow
		Left to first column.
	14. F
		Forward forever
	15. ESC + F
		Like F but stop when search pattern is found.
	16. r or (CTRL + R) or (CTRL + L)
		Repaint
	17. R
		Repaint and discard any buffered input.

	18. g or (ESC - <)
		go to first line or line <n>.
	19. G or ( ESC - >)
		go to last line or line <n>.
	20. p or % <n>
		go to 0% or <n> percentage of file.

	To Exit: q or :q or Q or :Q or ZZ
		To Exit.

2. Look at the man page for ls. What does the -l flag do? What does the -a flag do?
	In the man page for ls:
		-l flag will list one file per line.
 		-a flag will list all files and folders in the directory contents. ".. including entries starting with ."

3. How do you jump between words in the terminal?
To jump between words use:
	(ALT + Left or Right arrow)

4. How do you get to the end of a line in terminal?
To move to the end of the line in a terminal:
	(CTRL + e)

5. How do you move your cursor to the beginning in terminal?
To move your cursor to the beginning in terminal:
	(CTRL + a)

6. How do you delete a word (without pressing backspace multiple times) in terminal?
To delete an entire word in the terminal up to the cursor:
	(CTRL + w)

7. What is the difference between a terminal and shell?
	The difference between a terminal and shell: 
		A shell is a program that processes commands and returns an output.
		The shell also manages all processes on a PC, keep command history, and has command line editing.
		A Terminal is a wrapper program which can interact with the computer and run a shell.

8. What is an absolute path?
	An absolute path is any directory with a start from the root directory.

9. What is an relative path?
	A relative path is just relative to the current directory on the associated shell.

10. What is a flag? Give three examples of flags you have used.
	A flag is used to enable or change features of a program. In order to see which flags a program has, use the man command before the command to see the associated documenation.
	Some flags I have used are:
		1. ls -a, to show all files and folders within a directory.
		2. cp -R, to copy a folder along with its contents.
		3. rm -R, to delete an entire folder without having to delete all files within the directory first.

11. What do the r and f flags do with the rm command?
	The r and f flags change the behavior of the rm command.
		-r flag will enable a recursive deletion of files. Any files and other folders inside a direcotry (if a directory is specified) will be deleted.
		-f flag forces the command, and will ignore all prompts, including from specific parameters which point to non-existent files or folders.

